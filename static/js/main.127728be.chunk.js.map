{"version":3,"sources":["components/Layout/Layout.js","components/FormApp/FormApp.js","App.js","index.js","components/FormApp/FormApp.module.css","components/Layout/Layout.module.css"],"names":["Layout","children","className","s","container","FormApp","initialValues","firstName","lastName","email","password","checkbox","validationSchema","Yup","max","required","min","matches","oneOf","onSubmit","values","setSubmitting","console","log","style","form","title","htmlFor","name","type","field","placeholder","component","error","acceptLicence","id","href","btn","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gMAMeA,EAJA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,uCCuMxBI,EArMC,WACd,OACE,cAAC,IAAD,CACEC,cAAe,CACbC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,UAAU,GAEZC,iBAAkBC,IAAW,CAC3BN,UAAWM,MACRC,IAAI,GAAI,iCACRC,SAAS,YACZP,SAAUK,MACPC,IAAI,GAAI,iCACRC,SAAS,YACZN,MAAOI,MAAaJ,MAAM,yBAAyBM,SAAS,YAC5DL,SAAUG,MACPE,SAAS,YACTC,IAAI,EAAG,2DACPF,IAAI,GAAI,iCACRG,QAAQ,WAAY,4CACvBN,SAAUE,MACPE,SAAS,YACTG,MAAM,EAAC,GAAO,mCAEnBC,SAAU,SAACC,EAAD,GAA+B,EAApBC,cACnBC,QAAQC,IAAIH,IA1BhB,SAiCE,eAAC,IAAD,CAAMlB,UAAWsB,IAAMC,KAAvB,UACE,oBAAIvB,UAAWsB,IAAME,MAArB,sBACA,uBAAOC,QAAQ,YAAf,wBACA,cAAC,IAAD,CACEC,KAAK,YACLC,KAAK,OACL3B,UAAWsB,IAAMM,MACjBC,YAAY,SAEd,cAAC,IAAD,CACEH,KAAK,YACLI,UAAU,MACV9B,UAAWsB,IAAMS,QAGnB,uBAAON,QAAQ,WAAf,uBACA,cAAC,IAAD,CACEC,KAAK,WACLC,KAAK,OACL3B,UAAWsB,IAAMM,MACjBC,YAAY,WAEd,cAAC,IAAD,CAAcH,KAAK,WAAWI,UAAU,MAAM9B,UAAWsB,IAAMS,QAE/D,uBAAON,QAAQ,QAAf,mBACA,cAAC,IAAD,CACEC,KAAK,QACLC,KAAK,QACL3B,UAAWsB,IAAMM,MACjBC,YAAY,wBAEd,cAAC,IAAD,CAAcH,KAAK,QAAQI,UAAU,MAAM9B,UAAWsB,IAAMS,QAE5D,uBAAON,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,WACLC,KAAK,WACL3B,UAAWsB,IAAMM,MACjBC,YAAY,oBAEd,cAAC,IAAD,CAAcH,KAAK,WAAWI,UAAU,MAAM9B,UAAWsB,IAAMS,QAC/D,wBAAON,QAAQ,WAAWzB,UAAWsB,IAAMU,cAA3C,UACE,cAAC,IAAD,CAAOL,KAAK,WAAWD,KAAK,WAAWO,GAAG,aAC1C,6CACe,IACb,mBAAGC,KAAK,uEAAR,wCAKJ,cAAC,IAAD,CAAcR,KAAK,WAAWI,UAAU,MAAM9B,UAAWsB,IAAMS,QAC/D,wBAAQJ,KAAK,SAAS3B,UAAWsB,IAAMa,IAAvC,0BC9EOC,MARf,WACE,OACE,cAAC,EAAD,UACE,cAAC,EAAD,OCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,sBAAsB,MAAQ,uBAAuB,MAAQ,uBAAuB,IAAM,qBAAqB,MAAQ,uBAAuB,cAAgB,iC,mBCAvLD,EAAOC,QAAU,CAAC,UAAY,4B","file":"static/js/main.127728be.chunk.js","sourcesContent":["import s from './Layout.module.css';\n\nconst Layout = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Layout;\n","import React from 'react';\nimport { ErrorMessage, Field, Form, Formik, useFormik } from 'formik';\nimport style from './FormApp.module.css';\nimport * as Yup from 'yup';\n\nconst FormApp = () => {\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        checkbox: false,\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string()\n          .max(15, 'Must be 15 characters or less')\n          .required('Required'),\n        lastName: Yup.string()\n          .max(20, 'Must be 20 characters or less')\n          .required('Required'),\n        email: Yup.string().email('Invalid email address').required('Required'),\n        password: Yup.string()\n          .required('Required')\n          .min(8, 'Password is too short - should be 8 characters minimum.')\n          .max(20, 'Must be 20 characters or less')\n          .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n        checkbox: Yup.boolean()\n          .required('Required')\n          .oneOf([true], 'You should accept the licence'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log(values);\n        /*setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);*/\n      }}\n    >\n      <Form className={style.form}>\n        <h1 className={style.title}>Register</h1>\n        <label htmlFor=\"firstName\">First Name</label>\n        <Field\n          name=\"firstName\"\n          type=\"text\"\n          className={style.field}\n          placeholder=\"Mary\"\n        />\n        <ErrorMessage\n          name=\"firstName\"\n          component=\"div\"\n          className={style.error}\n        />\n\n        <label htmlFor=\"lastName\">Last Name</label>\n        <Field\n          name=\"lastName\"\n          type=\"text\"\n          className={style.field}\n          placeholder=\"Watson\"\n        />\n        <ErrorMessage name=\"lastName\" component=\"div\" className={style.error} />\n\n        <label htmlFor=\"email\">Email</label>\n        <Field\n          name=\"email\"\n          type=\"email\"\n          className={style.field}\n          placeholder=\"youremail@gmail.com\"\n        />\n        <ErrorMessage name=\"email\" component=\"div\" className={style.error} />\n\n        <label htmlFor=\"password\">Password</label>\n        <Field\n          name=\"password\"\n          type=\"password\"\n          className={style.field}\n          placeholder=\"* * * * * * * *\"\n        />\n        <ErrorMessage name=\"password\" component=\"div\" className={style.error} />\n        <label htmlFor=\"checkbox\" className={style.acceptLicence}>\n          <Field type=\"checkbox\" name=\"checkbox\" id=\"checkbox\" />\n          <p>\n            I agree with{' '}\n            <a href=\"https://www.termsfeed.com/blog/sample-terms-and-conditions-template/\">\n              terms and conditions\n            </a>\n          </p>\n        </label>\n        <ErrorMessage name=\"checkbox\" component=\"div\" className={style.error} />\n        <button type=\"submit\" className={style.btn}>\n          Submit\n        </button>\n      </Form>\n    </Formik>\n  );\n  /* const validate = values => {\n    const errors = {};\n    if (!values.firstName) {\n      errors.firstName = 'Required';\n    } else if (values.firstName.length > 15) {\n      errors.firstName = 'Must be 15 characters or less';\n    }\n\n    if (!values.lastName) {\n      errors.lastName = 'Required';\n    } else if (values.lastName.length > 20) {\n      errors.lastName = 'Must be 20 characters or less';\n    }\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n    ) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  };*/\n  /* const formik = useFormik({\n    initialValues: {\n      email: '',\n      firstName: '',\n      lastName: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string()\n        .min(3, 'Must be 3 characters or high')\n        .max(15, 'Must be 15 characters or less')\n        .required('Required'),\n      lastName: Yup.string()\n        .max(15, 'Must be 20 characters or less')\n        .required('Required'),\n      email: Yup.string().email('Invalid email address').required('Required'),\n      password: Yup.string()\n        .required('No password provided.')\n        .min(8, 'Password is too short - should be 8 chars minimum.')\n        .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.')\n    }),\n    /!*validate,*!/\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit} className={style.form}>\n      <label htmlFor=\"firstName\">First Name</label>\n      <input\n        id=\"firstName\"\n        name=\"firstName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.firstName}\n      />\n      {formik.touched.firstName && formik.errors.firstName ? (\n        <div className>{formik.errors.firstName}</div>\n      ) : null}\n      <label htmlFor=\"lastName\">Last Name</label>\n      <input\n        id=\"lastName\"\n        name=\"lastName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.lastName}\n      />\n      {formik.touched.lastName && formik.errors.lastName ? (\n        <div>{formik.errors.lastName}</div>\n      ) : null}\n      <label htmlFor=\"password\">Password</label>\n      <input\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.password}\n      />\n      {formik.touched.password && formik.errors.password ? (\n        <div>{formik.errors.password}</div>\n      ) : null}\n      <label htmlFor=\"email\">Email</label>\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.email}\n      />\n      {formik.touched.email && formik.errors.email ? (\n        <div>{formik.errors.email}</div>\n      ) : null}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );*/\n};\n\nexport default FormApp;\n","import Layout from './components/Layout/Layout';\nimport React from 'react';\nimport './App.css';\nimport FormApp from './components/FormApp/FormApp';\n\nfunction App() {\n  return (\n    <Layout>\n      <FormApp />\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormApp_form__3Ikal\",\"title\":\"FormApp_title__34-HG\",\"field\":\"FormApp_field__2zo76\",\"btn\":\"FormApp_btn__BKVGx\",\"error\":\"FormApp_error__31aAw\",\"acceptLicence\":\"FormApp_acceptLicence__2Qf5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__1nNA4\"};"],"sourceRoot":""}